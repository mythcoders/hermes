replicaCount: 1
hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
ingress:
  tls:
    enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "25m"
extraLabels:
  tags.datadoghq.com/env: 'prod'
  tags.datadoghq.com/service: 'hermes'
livenessProbe:
  probeType: 'exec'
  command:
    - cat
    - /app/tmp/health_checks/app
  initialDelaySeconds: 20
  timeoutSeconds: 15
readinessProbe:
  probeType: 'exec'
  command:
    - cat
    - /app/tmp/health_checks/app
  initialDelaySeconds: 20
  timeoutSeconds: 15
resources:
  limits:
    memory: 1Gi
    cpu: 1000m
  requests:
    memory: 512Mi
    cpu: 500m
workerResources:
  limits:
    memory: 1Gi
    cpu: 1000m
  requests:
    memory: 256Mi
    cpu: 250m
podDisruptionBudget:
  enabled: true
#   minAvailable: 2
# postgres is ONLY used in review and staging envs.
postgresql:
  postgresqlDatabase: 'hermes'
  postgresqlUsername: 'postgres'
  postgresqlPassword: 'hermes'
  postgresqlPostgresPassword: 'hermes'
workers:
  sidekiq:
    replicaCount: 1
    terminationGracePeriodSeconds: 60
    command: ["sh", "./scripts/worker", "start"]
    preStopCommand: ["sh", "./scripts/worker", "stop"]
    livenessProbe:
      probeType: 'exec'
      command:
        - cat
        - /app/tmp/health_checks/worker
      initialDelaySeconds: 25
      timeoutSeconds: 5
    readinessProbe:
      probeType: 'exec'
      command:
        - cat
        - /app/tmp/health_checks/worker
      initialDelaySeconds: 25
      timeoutSeconds: 5
